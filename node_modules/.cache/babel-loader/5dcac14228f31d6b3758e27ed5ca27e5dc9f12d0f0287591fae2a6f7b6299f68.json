{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ChatWindow',\n  props: {\n    chatUser: {\n      type: String,\n      required: true\n    },\n    chatId: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      messages: [{\n        id: 1,\n        sender: 'Usuario',\n        text: 'Hola!'\n      }, {\n        id: 2,\n        sender: 'Tú',\n        text: '¡Hola! ¿Cómo estás?'\n      }],\n      newMessage: ''\n    };\n  },\n  methods: {\n    sendMessage() {\n      if (this.newMessage.trim() === '') return;\n      const newMsg = {\n        id: this.messages.length + 1,\n        sender: 'Tú',\n        text: this.newMessage\n      };\n      this.messages.push(newMsg);\n      this.newMessage = '';\n      // Aquí puedes agregar la lógica para enviar el mensaje al backend\n    }\n  }\n};","map":{"version":3,"names":["name","props","chatUser","type","String","required","chatId","Number","data","messages","id","sender","text","newMessage","methods","sendMessage","trim","newMsg","length","push"],"sources":["C:\\Users\\corre\\OneDrive\\Documents\\Amaro\\PonyLink\\ponylink-frontend\\src\\components\\ChatWindow.vue"],"sourcesContent":["<template>\n    <div class=\"chat-window fixed inset-0 flex justify-center items-center bg-black bg-opacity-50\">\n      <div class=\"bg-gradient-to-br from-[#E6F0FF] to-[#CCE2FF] w-11/12 md:w-1/2 lg:w-1/3 rounded-lg shadow-xl p-4 relative\">\n        <!-- Botón de cerrar -->\n        <button @click=\"$emit('close')\" class=\"absolute top-3 right-3 text-[#001839] font-semibold text-xl hover:text-opacity-70\">\n          &times;\n        </button>\n        \n        <!-- Encabezado de chat -->\n        <h2 class=\"text-xl font-semibold text-[#001839] mb-4\">Conversación con {{ chatUser }}</h2>\n        \n        <!-- Contenedor de mensajes -->\n        <div class=\"messages overflow-y-auto h-64 mb-4 bg-white p-3 rounded-lg shadow-inner border border-[#CCE2FF]\">\n          <!-- Mensajes simulados -->\n          <div\n            v-for=\"message in messages\"\n            :key=\"message.id\"\n            :class=\"['message', message.sender === 'Tú' ? 'bg-[#001839] text-white text-right rounded-l-lg' : 'bg-gray-100 text-[#001839] text-left rounded-r-lg']\"\n            class=\"p-2 my-2 w-2/3\"\n            :style=\"{ alignSelf: message.sender === 'Tú' ? 'flex-end' : 'flex-start' }\"\n          >\n            <p><strong>{{ message.sender }}:</strong> {{ message.text }}</p>\n          </div>\n        </div>\n        \n        <!-- Formulario de envío de mensajes -->\n        <form @submit.prevent=\"sendMessage\" class=\"flex\">\n          <input\n            v-model=\"newMessage\"\n            type=\"text\"\n            placeholder=\"Escribe tu mensaje...\"\n            class=\"flex-1 border border-gray-300 p-3 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-[#001839]\"\n            required\n          />\n          <button type=\"submit\" class=\"bg-[#001839] text-white px-4 py-2 rounded-r-lg hover:bg-[#001839]/90 transition\">\n            Enviar\n          </button>\n        </form>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'ChatWindow',\n    props: {\n      chatUser: {\n        type: String,\n        required: true,\n      },\n      chatId: {\n        type: Number,\n        required: true,\n      },\n    },\n    data() {\n      return {\n        messages: [\n          { id: 1, sender: 'Usuario', text: 'Hola!' },\n          { id: 2, sender: 'Tú', text: '¡Hola! ¿Cómo estás?' },\n        ],\n        newMessage: '',\n      };\n    },\n    methods: {\n      sendMessage() {\n        if (this.newMessage.trim() === '') return;\n        const newMsg = {\n          id: this.messages.length + 1,\n          sender: 'Tú',\n          text: this.newMessage,\n        };\n        this.messages.push(newMsg);\n        this.newMessage = '';\n        // Aquí puedes agregar la lógica para enviar el mensaje al backend\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .chat-window {\n    z-index: 1000;\n  }\n  .messages {\n    display: flex;\n    flex-direction: column;\n  }\n  </style>\n  "],"mappings":";AA2CE,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,MAAM,EAAE;MACNH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CACR;QAAEC,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,SAAS;QAAEC,IAAI,EAAE;MAAQ,CAAC,EAC3C;QAAEF,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,IAAI;QAAEC,IAAI,EAAE;MAAsB,CAAC,CACrD;MACDC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,MAAM,EAAE,EAAE;MACnC,MAAMC,MAAK,GAAI;QACbP,EAAE,EAAE,IAAI,CAACD,QAAQ,CAACS,MAAK,GAAI,CAAC;QAC5BP,MAAM,EAAE,IAAI;QACZC,IAAI,EAAE,IAAI,CAACC;MACb,CAAC;MACD,IAAI,CAACJ,QAAQ,CAACU,IAAI,CAACF,MAAM,CAAC;MAC1B,IAAI,CAACJ,UAAS,GAAI,EAAE;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}